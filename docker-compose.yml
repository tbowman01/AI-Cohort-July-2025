# Docker Compose for AutoDevHub - SQLite-based Full Stack Application
version: '3.8'

services:
  # Backend Service (FastAPI with SQLite)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: autodevhub-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DATABASE_FILE=/app/data/autodevhub.db
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
      # Uncomment for development live reload:
      # - ./backend:/app:ro
    ports:
      - "5000:8000"  # External port 5000 as requested
    networks:
      - autodevhub_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: autodevhub-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://backend:8000
    ports:
      - "3000:3000"  # Frontend on port 3000 as requested
    networks:
      - autodevhub_network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Named volumes for data persistence
volumes:
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/backend
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/backend

# Shared network for frontend-backend communication
networks:
  autodevhub_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16